%h2 Set up postgres on ubuntu, followed by a Rails app using postgres database

%ul
  %li
    sudo apt-get remove postgresql postgresql-8.4
    %li sudo apt-get install postgresql libpq-dev postgresql-contrib -y
  %li
    sudo -u postgres psql postgres (whenever u need to su as postgres use this command)
    %br
    \\password # and enter a new password
    %br
    also read http://serverfault.com/questions/110154/whats-the-default-superuser-username-password-for-postgres-after-a-new-install
  %li
    .optional
      sudo su - postgres
  %li sudo -u postgres createuser [[someusername]] --pwprompt
  %li
    .optional
      psql template1 < /usr/share/postgresql/8.4/contrib/adminpack.sql
  %li
    if you uninstalled and then installed postgres, then if you have the pg gem, u need to uninstall and reinstall it again so that it builds with the correct installed version
  %li
    for rails, u can use the same user that pg created. this is the database user, not the system user.
    for verification, check http://railscasts.com/episodes/342-migrating-to-postgresql
  %li
    bundle exec rails new hudhud-pgdb -d postgresql
    
  %li
    createdb umar
  %li
    psql # now i can connect to the shell, since i am logged in as user umar and it connects to db umar.
  %li
    back to installation instruction. I had earlier set up postgres user account for umar apparently, so if the db file, i used user umar and it started working! so for heroku apps, use user umar! Also, the user umar may have a password, but when you create database using the database.yml file, the password for the database may/may not be the same as the password for umar. It is a database-specific password.
    
    
%h3
  Some psql tasks
%ul
  %li
    psql
    %note
      First, my user account, and my db account has same name, so this avoids the need to set a different user for db (which means a command option can be skipped) further, i have a db created with the same user account, so i can simply execute psql and it works. But typically, what happens is that you need to tell psql which db user to log in as, and which db to connect to. without arguments, it tries to log in with db user same as the current user, and the same db, so if they are not created, then psql fails. for me, thsi step works, so i am on the next step.
  %li
    this is a wonderful resource: http://www.postgresql.org/docs/8.0/static/tutorial-accessdb.html especially look from create db onwards, user account and password etc problems are explained nicely
  %li
    \q for quit, and \? for help
  %li
    psql dbname, and interact with it, or "rails db" does the same as well
  %li 
    \h lists sql commands, \? lists all commands, and \h select lists help for select command
